- comment: Graph
  begin: ^\s*(graph|flowchart)\s+([A-Za-z\ 0-9]+)
  beginCaptures:
    '1':
      name: keyword.control.mermaid
    '2':
      name: entity.name.function.mermaid
  patterns:
    - match: \%%.*
      name: comment
    - match: \b(subgraph)\s+([A-Za-z\ 0-9]+)
      captures:
        '1':
          name: keyword.control.mermaid
        '2':
          name: entity.name.function.mermaid
      name: meta.function.mermaid
    - match: \b(end|RB|BT|RL|TD|LR)\b
      name: keyword.control.mermaid
    - comment: '(Entity)(Edge/Shape)(Text)(Edge/Shape)'
      begin: !regex |-
        (\b[-\w]+\b\s*) # Entity
        (\(\[|\[\[|\[\(|\[|\(+|\>|\{|\(\() # Edge/Shape
      beginCaptures:
        '1':
          name: variable
        '2':
          name: keyword.control.mermaid
        '3':
          name: string
      patterns:
        - comment: ("multi-line text") 
          begin: '\s*(")'
          beginCaptures:
            '1':
              name: string
          patterns:
            - comment: '(capture inner text between quotes)'
              begin: !regex |-
                ([^"]*)
              beginCaptures:
                '1':
                  name: string
              patterns:
              # This capture is needed to make the begin capture function
                - match: '([^"]*)'
                  captures:
                    '1':
                      name: comment
              end: '(?=")'
          end: '(")'
          endCaptures:
            '1':
              name: string
        - comment: single line text
          match: !regex |-
            \s*([$&%\^/#.,?!;:*+<>_\'\\\w\s]+) # Text
          captures:
            '1':
              name: string
      end: !regex |-
        (\]\)|\]\]|\)\]|\]|\)+|\}|\)\)) # Edge/Shape
      endCaptures:
        '1':
          name: keyword.control.mermaid
    - comment: Entity  
      match: (\b[-\w]+\b\s*)
      name: variable
    - comment: Graph Link
      match: !regex |-
        \s*([ox<]?(?:-.{1,3}-|-{1,3}|={1,3})[ox>]?) # Graph Link
      captures:
        '1':
          name: keyword.control.mermaid
    - comment: '(Class)(Node(s))(ClassName)'
      match: !regex |-
        \s*(class) # class
        \s+(\b[-,\w]+) # Node(s)
        \s+(\b\w+\b) # ClassName
      captures:
        '1':
          name: keyword.control.mermaid
        '2':
          name: variable
        '3':
          name: string
    - comment: '(ClassDef)(ClassName)(Styles)'
      match: !regex |-
        \s*(classDef) # classDef
        \s+(\b\w+\b) # ClassName
        \s+(\b[-,:;#\w]+) # Styles
      captures:
        '1':
          name: keyword.control.mermaid
        '2':
          name: variable
        '3':
          name: string
    - comment: '(Click)(Entity)(Link)?(Tooltip)'
      match: !regex |-
        \s*(click) # Click
        \s+(\b[-\w]+\b\s*) # Entity
        (\b\w+\b)? # Link/callback?
        \s("*.*") # Tooltip
      captures:
        '1':
          name: keyword.control.mermaid
        '2':
          name: variable
        '3':
          name: variable
        '4':
          name: string
  end: (^|\G)(?=\s*[`~]{3,}\s*$)
