- comment: Entity Relationship Diagram
  begin: ^\s*(erDiagram)
  beginCaptures:
    '1':
      name: keyword.control.mermaid
  patterns:
    - match: \%%.*
      name: comment
    - comment: '(entity)'
      match: ^\s*([\w-]+)$
      name: variable
    - comment: '(entity) {'
      begin: !regex |-
        \s+([\w-]+) # entity name
        \s+({) # {
      beginCaptures:
        '1':
          name: variable
        '2':
          name: keyword.control.mermaid
      patterns:
        - comment: '(type) (name) (PK|FK)? ("comment")?'
          match: !regex |-
            \s*([\w-]+)\s+ # type
            ([\w-]+)\s+ # name
            (PK|FK)?\s* # key?
            ("["\($&%\^/#.,?!;:*+=<>\'\\\-\w\s]*")?\s* # comment?
          captures:
            '1':
              name: storage.type.mermaid
            '2':
              name: variable
            '3':
              name: keyword.control.mermaid
            '4':
              name: string
        - match: \%%.*
          name: comment
      end: (})
      endCaptures:
        '1':
          name: keyword.control.mermaid
    - comment: '(entity) (relationship) (entity) : (label)'
      match: !regex |-
        \s*([\w-]+)\s+ # entity
        ((?:\|o|\|\||}o|}\|)(?:..|--)(?:o\||\|\||o{|\|{))\s+ # relationship
        ([\w-]+)\s+ # entity
        (:)\s+ # :
        ((?:"[\w\s]*")|(?:[\w-]+)) # label
      captures:
        '1':
          name: variable
        '2':
          name: keyword.control.mermaid
        '3':
          name: variable
        '4':
          name: keyword.control.mermaid
        '5':
          name: string
  end: (^|\G)(?=\s*[`:~]{3,}\s*$)
